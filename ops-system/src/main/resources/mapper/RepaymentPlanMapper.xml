<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yasinyt.system.dao.RepaymentPlanDao">
  <resultMap id="BaseResultMap" type="com.yasinyt.system.entity.RepaymentPlan">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="OPTIME" jdbcType="TIMESTAMP" property="optime" />
    <result column="ACCRUAL" jdbcType="FLOAT" property="accrual" />
    <result column="ALREADY_ACCRUAL" jdbcType="FLOAT" property="alreadyAccrual" />
    <result column="ALREADY_CAPITAL" jdbcType="FLOAT" property="alreadyCapital" />
    <result column="CAPITAL" jdbcType="FLOAT" property="capital" />
    <result column="EARLIERINTEREST" jdbcType="FLOAT" property="earlierinterest" />
    <result column="OVERDUEINTEREST" jdbcType="FLOAT" property="overdueinterest" />
    <result column="PLAN_DATE" jdbcType="TIMESTAMP" property="planDate" />
    <result column="PLAN_PERIOD" jdbcType="DECIMAL" property="planPeriod" />
    <result column="REALITY_DATE" jdbcType="TIMESTAMP" property="realityDate" />
    <result column="STATUS" jdbcType="DECIMAL" property="status" />
    <result column="BORROW_ID" jdbcType="VARCHAR" property="borrowId" />
    <result column="MANAGEMENT_FEE" jdbcType="FLOAT" property="managementFee" />
    <result column="OVERDUE_BREACH_FEE" jdbcType="FLOAT" property="overdueBreachFee" />
    <result column="ALREADY_OVERDUE_INTEREST" jdbcType="FLOAT" property="alreadyOverdueInterest" />
    <result column="ALREADY_MANAGEMENT_FEE" jdbcType="FLOAT" property="alreadyManagementFee" />
    <result column="ALREADY_OVERDUE_BREACH_FEE" jdbcType="FLOAT" property="alreadyOverdueBreachFee" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, OPTIME, ACCRUAL, ALREADY_ACCRUAL, ALREADY_CAPITAL, CAPITAL, EARLIERINTEREST, 
    OVERDUEINTEREST, PLAN_DATE, PLAN_PERIOD, REALITY_DATE, STATUS, BORROW_ID, MANAGEMENT_FEE, 
    OVERDUE_BREACH_FEE, ALREADY_OVERDUE_INTEREST, ALREADY_MANAGEMENT_FEE, ALREADY_OVERDUE_BREACH_FEE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from P2P_REPAYMENT_PLAN
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  
   <select id="findAll" parameterType="com.yasinyt.system.web.form.RepaymentPlanForm" resultMap="BaseResultMap">
    select 
    	plan.*
    from P2P_REPAYMENT_PLAN plan,P2P_BORROW borrow,P2P_MEMBER_REAL_NAME_AUTH real
    where borrow.member_id = real.member_id and plan.borrow_id = borrow.id
    <if test="borrowCode != null and borrowCode!='' "> and borrow.borrow_code =  #{borrowCode,jdbcType=VARCHAR}</if>
    <if test="phoneNumber != null and phoneNumber!='' "> and real.phone_number = #{phoneNumber,jdbcType=VARCHAR}</if>
    <if test="realName != null and realName != ''"> and real.real_name = #{realName,jdbcType=VARCHAR}</if>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from P2P_REPAYMENT_PLAN
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yasinyt.system.entity.RepaymentPlan">
    insert into P2P_REPAYMENT_PLAN (ID, OPTIME, ACCRUAL, 
      ALREADY_ACCRUAL, ALREADY_CAPITAL, CAPITAL, 
      EARLIERINTEREST, OVERDUEINTEREST, PLAN_DATE, 
      PLAN_PERIOD, REALITY_DATE, STATUS, 
      BORROW_ID, MANAGEMENT_FEE, OVERDUE_BREACH_FEE, 
      ALREADY_OVERDUE_INTEREST, ALREADY_MANAGEMENT_FEE, 
      ALREADY_OVERDUE_BREACH_FEE)
    values (#{id,jdbcType=VARCHAR}, #{optime,jdbcType=TIMESTAMP}, #{accrual,jdbcType=FLOAT}, 
      #{alreadyAccrual,jdbcType=FLOAT}, #{alreadyCapital,jdbcType=FLOAT}, #{capital,jdbcType=FLOAT}, 
      #{earlierinterest,jdbcType=FLOAT}, #{overdueinterest,jdbcType=FLOAT}, #{planDate,jdbcType=TIMESTAMP}, 
      #{planPeriod,jdbcType=DECIMAL}, #{realityDate,jdbcType=TIMESTAMP}, #{status,jdbcType=DECIMAL}, 
      #{borrowId,jdbcType=VARCHAR}, #{managementFee,jdbcType=FLOAT}, #{overdueBreachFee,jdbcType=FLOAT}, 
      #{alreadyOverdueInterest,jdbcType=FLOAT}, #{alreadyManagementFee,jdbcType=FLOAT}, 
      #{alreadyOverdueBreachFee,jdbcType=FLOAT})
  </insert>
  <insert id="insertSelective" parameterType="com.yasinyt.system.entity.RepaymentPlan">
    insert into P2P_REPAYMENT_PLAN
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="optime != null">
        OPTIME,
      </if>
      <if test="accrual != null">
        ACCRUAL,
      </if>
      <if test="alreadyAccrual != null">
        ALREADY_ACCRUAL,
      </if>
      <if test="alreadyCapital != null">
        ALREADY_CAPITAL,
      </if>
      <if test="capital != null">
        CAPITAL,
      </if>
      <if test="earlierinterest != null">
        EARLIERINTEREST,
      </if>
      <if test="overdueinterest != null">
        OVERDUEINTEREST,
      </if>
      <if test="planDate != null">
        PLAN_DATE,
      </if>
      <if test="planPeriod != null">
        PLAN_PERIOD,
      </if>
      <if test="realityDate != null">
        REALITY_DATE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="borrowId != null">
        BORROW_ID,
      </if>
      <if test="managementFee != null">
        MANAGEMENT_FEE,
      </if>
      <if test="overdueBreachFee != null">
        OVERDUE_BREACH_FEE,
      </if>
      <if test="alreadyOverdueInterest != null">
        ALREADY_OVERDUE_INTEREST,
      </if>
      <if test="alreadyManagementFee != null">
        ALREADY_MANAGEMENT_FEE,
      </if>
      <if test="alreadyOverdueBreachFee != null">
        ALREADY_OVERDUE_BREACH_FEE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="optime != null">
        #{optime,jdbcType=TIMESTAMP},
      </if>
      <if test="accrual != null">
        #{accrual,jdbcType=FLOAT},
      </if>
      <if test="alreadyAccrual != null">
        #{alreadyAccrual,jdbcType=FLOAT},
      </if>
      <if test="alreadyCapital != null">
        #{alreadyCapital,jdbcType=FLOAT},
      </if>
      <if test="capital != null">
        #{capital,jdbcType=FLOAT},
      </if>
      <if test="earlierinterest != null">
        #{earlierinterest,jdbcType=FLOAT},
      </if>
      <if test="overdueinterest != null">
        #{overdueinterest,jdbcType=FLOAT},
      </if>
      <if test="planDate != null">
        #{planDate,jdbcType=TIMESTAMP},
      </if>
      <if test="planPeriod != null">
        #{planPeriod,jdbcType=DECIMAL},
      </if>
      <if test="realityDate != null">
        #{realityDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="borrowId != null">
        #{borrowId,jdbcType=VARCHAR},
      </if>
      <if test="managementFee != null">
        #{managementFee,jdbcType=FLOAT},
      </if>
      <if test="overdueBreachFee != null">
        #{overdueBreachFee,jdbcType=FLOAT},
      </if>
      <if test="alreadyOverdueInterest != null">
        #{alreadyOverdueInterest,jdbcType=FLOAT},
      </if>
      <if test="alreadyManagementFee != null">
        #{alreadyManagementFee,jdbcType=FLOAT},
      </if>
      <if test="alreadyOverdueBreachFee != null">
        #{alreadyOverdueBreachFee,jdbcType=FLOAT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yasinyt.system.entity.RepaymentPlan">
    update P2P_REPAYMENT_PLAN
    <set>
      <if test="optime != null">
        OPTIME = #{optime,jdbcType=TIMESTAMP},
      </if>
      <if test="accrual != null">
        ACCRUAL = #{accrual,jdbcType=FLOAT},
      </if>
      <if test="alreadyAccrual != null">
        ALREADY_ACCRUAL = #{alreadyAccrual,jdbcType=FLOAT},
      </if>
      <if test="alreadyCapital != null">
        ALREADY_CAPITAL = #{alreadyCapital,jdbcType=FLOAT},
      </if>
      <if test="capital != null">
        CAPITAL = #{capital,jdbcType=FLOAT},
      </if>
      <if test="earlierinterest != null">
        EARLIERINTEREST = #{earlierinterest,jdbcType=FLOAT},
      </if>
      <if test="overdueinterest != null">
        OVERDUEINTEREST = #{overdueinterest,jdbcType=FLOAT},
      </if>
      <if test="planDate != null">
        PLAN_DATE = #{planDate,jdbcType=TIMESTAMP},
      </if>
      <if test="planPeriod != null">
        PLAN_PERIOD = #{planPeriod,jdbcType=DECIMAL},
      </if>
      <if test="realityDate != null">
        REALITY_DATE = #{realityDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="borrowId != null">
        BORROW_ID = #{borrowId,jdbcType=VARCHAR},
      </if>
      <if test="managementFee != null">
        MANAGEMENT_FEE = #{managementFee,jdbcType=FLOAT},
      </if>
      <if test="overdueBreachFee != null">
        OVERDUE_BREACH_FEE = #{overdueBreachFee,jdbcType=FLOAT},
      </if>
      <if test="alreadyOverdueInterest != null">
        ALREADY_OVERDUE_INTEREST = #{alreadyOverdueInterest,jdbcType=FLOAT},
      </if>
      <if test="alreadyManagementFee != null">
        ALREADY_MANAGEMENT_FEE = #{alreadyManagementFee,jdbcType=FLOAT},
      </if>
      <if test="alreadyOverdueBreachFee != null">
        ALREADY_OVERDUE_BREACH_FEE = #{alreadyOverdueBreachFee,jdbcType=FLOAT},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yasinyt.system.entity.RepaymentPlan">
    update P2P_REPAYMENT_PLAN
    set OPTIME = #{optime,jdbcType=TIMESTAMP},
      ACCRUAL = #{accrual,jdbcType=FLOAT},
      ALREADY_ACCRUAL = #{alreadyAccrual,jdbcType=FLOAT},
      ALREADY_CAPITAL = #{alreadyCapital,jdbcType=FLOAT},
      CAPITAL = #{capital,jdbcType=FLOAT},
      EARLIERINTEREST = #{earlierinterest,jdbcType=FLOAT},
      OVERDUEINTEREST = #{overdueinterest,jdbcType=FLOAT},
      PLAN_DATE = #{planDate,jdbcType=TIMESTAMP},
      PLAN_PERIOD = #{planPeriod,jdbcType=DECIMAL},
      REALITY_DATE = #{realityDate,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=DECIMAL},
      BORROW_ID = #{borrowId,jdbcType=VARCHAR},
      MANAGEMENT_FEE = #{managementFee,jdbcType=FLOAT},
      OVERDUE_BREACH_FEE = #{overdueBreachFee,jdbcType=FLOAT},
      ALREADY_OVERDUE_INTEREST = #{alreadyOverdueInterest,jdbcType=FLOAT},
      ALREADY_MANAGEMENT_FEE = #{alreadyManagementFee,jdbcType=FLOAT},
      ALREADY_OVERDUE_BREACH_FEE = #{alreadyOverdueBreachFee,jdbcType=FLOAT}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>